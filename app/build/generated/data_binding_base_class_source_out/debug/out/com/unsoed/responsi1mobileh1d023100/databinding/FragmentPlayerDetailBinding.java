// Generated by view binder compiler. Do not edit!
package com.unsoed.responsi1mobileh1d023100.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unsoed.responsi1mobileh1d023100.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPlayerDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvPlayerBirth;

  @NonNull
  public final TextView tvPlayerName;

  @NonNull
  public final TextView tvPlayerNationality;

  @NonNull
  public final TextView tvPlayerPosition;

  private FragmentPlayerDetailBinding(@NonNull LinearLayout rootView,
      @NonNull TextView tvPlayerBirth, @NonNull TextView tvPlayerName,
      @NonNull TextView tvPlayerNationality, @NonNull TextView tvPlayerPosition) {
    this.rootView = rootView;
    this.tvPlayerBirth = tvPlayerBirth;
    this.tvPlayerName = tvPlayerName;
    this.tvPlayerNationality = tvPlayerNationality;
    this.tvPlayerPosition = tvPlayerPosition;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlayerDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlayerDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_player_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlayerDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvPlayerBirth;
      TextView tvPlayerBirth = ViewBindings.findChildViewById(rootView, id);
      if (tvPlayerBirth == null) {
        break missingId;
      }

      id = R.id.tvPlayerName;
      TextView tvPlayerName = ViewBindings.findChildViewById(rootView, id);
      if (tvPlayerName == null) {
        break missingId;
      }

      id = R.id.tvPlayerNationality;
      TextView tvPlayerNationality = ViewBindings.findChildViewById(rootView, id);
      if (tvPlayerNationality == null) {
        break missingId;
      }

      id = R.id.tvPlayerPosition;
      TextView tvPlayerPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvPlayerPosition == null) {
        break missingId;
      }

      return new FragmentPlayerDetailBinding((LinearLayout) rootView, tvPlayerBirth, tvPlayerName,
          tvPlayerNationality, tvPlayerPosition);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
